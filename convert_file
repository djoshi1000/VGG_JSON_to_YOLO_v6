import os, glob
import json
from PIL import Image 
import pandas as pd
import os
fold= r"F:/yolo5/Images_From_Videos/New_folder/"
for i in range(23,25):
    #print(i)
    folder= fold+str(i)+"/"
    print(folder)
    file= glob.glob(folder+"*.json")
    print(file[0])
    #file = r"G:\Dashcam_Images\Selected_Videos\Jsons\YOLO\Images_use\Shashika_v2.json"
    #file= r"F:\yolo5\Images\Annotated_REC_2022_05_04_16_56_03_F.json"
    with open(file[0]) as f:
        json_file = json.load(f)
        json_file = json_file['_via_img_metadata']
        images = list(json_file.keys()) #[n.split('.png')[0]+'.png' for n in list(json_file.keys())]
    for img in images[:]:
        actual = img.split('.png')[0] + '.png'
        actual = os.path.join(folder, actual)
        img1 = Image.open(actual)
        img_x, img_y = img1.size
        info = json_file[img]
        temp_rectangles = info['regions']
        xmin = []
        xmax = []
        ymin = []
        ymax = []
        c = []
        width = []
        height = []
        for rec in temp_rectangles:
            tmp_xmin = rec['shape_attributes']['x']
            tmp_ymin = rec['shape_attributes']['y']
            tmp_width = rec['shape_attributes']['width']
            tmp_height = rec['shape_attributes']['height']
            tmp_c = rec['region_attributes']['Class']

            if tmp_c == 'l':
                tmp_c = 0
            elif tmp_c=='d':
                tmp_c= 1
            elif tmp_c=='p':
                tmp_c= 2
            elif tmp_c=='t':
                tmp_c= 3
            elif tmp_c=='tr':
                tmp_c= 4
            else :
                print("serious error check annotation in VGG", tmp_c, img)

            #tmp_xmax = tmp_xmin + tmp_width
            #tmp_ymax = tmp_ymin + tmp_height

            tmp_xmin = tmp_xmin / img_x
            tmp_xmax = tmp_xmax / img_x
            tmp_ymin = tmp_ymin / img_y
            tmp_ymax = tmp_ymax / img_y

            xmin.append(tmp_xmin)
            xmax.append(tmp_xmax)
            ymin.append(tmp_ymin)
            ymax.append(tmp_ymax)
            c.append(tmp_c)

        txtfile_dir = actual.replace('.png','.txt')

        tmp_df = pd.DataFrame()
        tmp_df['c'] = c
        tmp_df['xmin'] = xmin
        tmp_df['xmax'] = xmax
        tmp_df['ymin'] = ymin
        tmp_df['ymax'] = ymax

        tmp_df.to_csv(txtfile_dir, sep= ' ', header= False, index = False)
